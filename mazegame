#!/usr/bin/python3
# SPDX-FileCopyrightText: 2024 Kohei Kobayashi
# SPDX-License-Identifire: BSD-3-Clause

import random

def generate_maze(rows, cols):
    maze = [["#" for _ in range(cols)] for _ in range(rows)]

    for y in range(1, rows - 1):
        for x in range(1, cols - 1):
            maze[y][x] = " " if random.random() < 0.7 else "#"

    start_x, start_y = random.randint(1, cols - 2), random.randint(1, rows - 2)
    goal_x, goal_y = random.randint(1, cols - 2), random.randint(1, rows - 2)
    
    while (start_x, start_y) == (goal_x, goal_y):
        goal_x, goal_y = random.randint(1, cols - 2), random.randint(1, rows - 2)

    maze[start_y][start_x] = "S"
    maze[goal_y][goal_x] = "G"

    return maze, start_x, start_y

def print_maze(maze, player_x, player_y):
    for y, row in enumerate(maze):
        for x, cell in enumerate(row):
            if x == player_x and y == player_y:
                print("P", end="")
            else:
                print(cell, end="")
        print()

def move_player(direction, player_x, player_y, maze):
    new_x, new_y = player_x, player_y

    if direction == "w":  # 上
        new_y -= 1
    elif direction == "s":  # 下
        new_y += 1
    elif direction == "a":  # 左
        new_x -= 1
    elif direction == "d":  # 右
        new_x += 1
    else:
        print("Invalid input! Use w/a/s/d to move.")
        return player_x, player_y

    if maze[new_y][new_x] != "#":
        return new_x, new_y
    else:
        print("You hit a wall!")
        return player_x, player_y

rows, cols = 10, 10  # 迷路のサイズ
maze, player_x, player_y = generate_maze(rows, cols)

print("Welcome to the Maze Game!")
print("Find the 'G' to win. Use w/a/s/d to move. Press 'q' to quit.")

while True:
    print_maze(maze, player_x, player_y)
    if maze[player_y][player_x] == "G":
        print("🎉 Congratulations! You reached the goal!")
        break

    command = input("Move (w/a/s/d): ").lower()
    if command == "q":
        print("Goodbye!")
        break
    player_x, player_y = move_player(command, player_x, player_y, maze)

